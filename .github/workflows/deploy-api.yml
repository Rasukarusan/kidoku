name: Deploy API to Cloud Run

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'apps/api/**'
      - '.github/workflows/deploy-api.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ環境'
        required: true
        default: 'production'
        type: choice
        options:
        - production

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: kidoku-api
  REGION: asia-northeast1
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/kidoku-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile.api -t ${{ env.IMAGE }}:${{ github.sha }} -t ${{ env.IMAGE }}:latest .
          docker push ${{ env.IMAGE }}:${{ github.sha }}
          docker push ${{ env.IMAGE }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 4000 \
            --memory 256Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 2 \
            --timeout 30 \
            --set-env-vars "NODE_ENV=production" \
            --set-env-vars "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" \
            --set-env-vars "DB_HOST=${{ secrets.DB_HOST }}" \
            --set-env-vars "DB_PORT=${{ secrets.DB_PORT }}" \
            --set-env-vars "DB_USER=${{ secrets.DB_USER }}" \
            --set-env-vars "DB_PASS=${{ secrets.DB_PASS }}" \
            --set-env-vars "DB_NAME=${{ secrets.DB_NAME }}" \
            --set-env-vars "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}"

      - name: Show Service URL
        run: |
          echo "Service deployed to:"
          gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)'