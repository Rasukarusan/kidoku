version: '3'

services:
  meilisearch:
    build:
      context: ./docker/meilisearch
      dockerfile: Dockerfile
    ports:
      - '7700:7700'
    volumes:
      - ./docker/meilisearch/data/meilisearch:/meili_data/data.ms
    environment:
      - MEILI_HTTP_ADDR=${MEILI_HTTP_ADDR}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
  db:
    image: mysql:9.3
    container_name: kidoku_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
  
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: kidoku_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - ./docker/prometheus/data:/prometheus
    depends_on:
      - node-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.2.2
    container_name: kidoku_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - '13000:3000'
    volumes:
      - ./docker/grafana/data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: kidoku_node_exporter
    ports:
      - '9100:9100'
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /:/host:ro
    restart: unless-stopped
